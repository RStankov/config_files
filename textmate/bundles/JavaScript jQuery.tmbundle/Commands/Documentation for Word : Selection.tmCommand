<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require 'rexml/document'
require 'tempfile'
include REXML
file = File.open ENV['TM_BUNDLE_SUPPORT'] + '/jquery-docs-xml-15.xml'

doc = Document.new(file)
root = doc.root

sel_text = ENV['TM_SELECTED_TEXT']

if sel_text.nil?
  cur_line = ENV['TM_CURRENT_LINE']
  cur_word = ENV['TM_CURRENT_WORD']
  matcher = cur_line.match(/(jQuery|\$)(\.#{cur_word})/)
  lookup_word = matcher ? 'jQuery' + matcher[2] : cur_word
else
  lookup_word = sel_text
end
lookup_word = lookup_word.sub('$','jQuery')

entries = ''
root.elements.each("//entry[@name='#{lookup_word}']") { |e| entries += e.to_s }

stylefile = ENV['TM_BUNDLE_SUPPORT'] + '/docs-15.xsl'

tf = Tempfile.new('docs')
tf.puts('&lt;?xml version="1.0" encoding="UTF-8"?&gt;' + "\n")
tf.puts('&lt;docs&gt;' + "\n")
tf.puts entries
tf.puts('&lt;/docs&gt;' + "\n")
tf.close
xmlfile = tf.path

output = `xsltproc "#{stylefile}" "#{xmlfile}"`

if output.length &lt; 100
  url = "https://developer.mozilla.org/en?search=title:" + lookup_word
  puts "&lt;meta http-equiv='Refresh' content='0;URL=#{url}'&gt;"
else
  puts output
end
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^h</string>
	<key>name</key>
	<string>Documentation for Word / Selection</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.js.jquery</string>
	<key>uuid</key>
	<string>690646D5-AC38-4EB9-8C41-776E4F55CB59</string>
</dict>
</plist>
