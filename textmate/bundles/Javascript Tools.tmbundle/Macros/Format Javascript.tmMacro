<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>commands</key>
	<array>
		<dict>
			<key>argument</key>
			<dict>
				<key>commands</key>
				<array>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m);\s+</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>; </string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m)\s*}\s+</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>\n}\n</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m)\)\s*\{\s*</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>)\n{\n</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m)\s*\}</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>\n}</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m)\(\s*</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>(</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m)\s*\)</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>)</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>argument</key>
						<dict>
							<key>action</key>
							<string>replaceAll</string>
							<key>findInProjectIgnoreCase</key>
							<true/>
							<key>findInProjectRegularExpression</key>
							<false/>
							<key>findString</key>
							<string>(?m);\s*</string>
							<key>ignoreCase</key>
							<true/>
							<key>regularExpression</key>
							<true/>
							<key>replaceAllScope</key>
							<string>selection</string>
							<key>replaceString</key>
							<string>;\n</string>
							<key>wrapAround</key>
							<true/>
						</dict>
						<key>command</key>
						<string>findWithOptions:</string>
					</dict>
					<dict>
						<key>command</key>
						<string>indent:</string>
					</dict>
				</array>
			</dict>
			<key>command</key>
			<string>playMacroWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>count</string>
				<key>findInProjectIgnoreCase</key>
				<true/>
				<key>findInProjectRegularExpression</key>
				<false/>
				<key>findString</key>
				<string>(?m)}\s*{</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>selection</string>
				<key>replaceString</key>
				<string>;\n</string>
				<key>wrapAround</key>
				<true/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>argument</key>
			<dict>
				<key>action</key>
				<string>replaceAll</string>
				<key>findInProjectIgnoreCase</key>
				<true/>
				<key>findInProjectRegularExpression</key>
				<false/>
				<key>findString</key>
				<string>(?m)}\s*(else)\s*{</string>
				<key>ignoreCase</key>
				<true/>
				<key>regularExpression</key>
				<true/>
				<key>replaceAllScope</key>
				<string>selection</string>
				<key>replaceString</key>
				<string>}\nelse\n{</string>
				<key>wrapAround</key>
				<true/>
			</dict>
			<key>command</key>
			<string>findWithOptions:</string>
		</dict>
		<dict>
			<key>command</key>
			<string>indent:</string>
		</dict>
	</array>
	<key>keyEquivalent</key>
	<string>^q</string>
	<key>name</key>
	<string>Format Javascript ᴬᴸᴾᴴᴬ</string>
	<key>scope</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>486A2267-2A7B-46B7-9C0A-BC81D33DC0CB</string>
</dict>
</plist>
