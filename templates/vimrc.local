" Reformat with Prettier on save
let g:prettier#autoformat = 0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql PrettierAsync

" Ale linters setup
let g:ale_linters = { 'typescript': ['prettier', 'tsserver', 'tslint'], 'css': ['stylelint'], 'javascript': ['eslint', 'flow'], 'ruby': ['rubocop'] }
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_enter = 0
" let g:ale_ruby_rubocop_executable = 'bundle exec rubocop'

" Don't search in db and flow-typed
command! -nargs=* -complete=dir F :exe "Rg --glob !backend/db --glob !frontend/graphql" <q-args>

" React component shortcuts
command! Efragment :exe "edit ".expand('%:h')."/Fragment.ts"
command! Vfragment :exe "vsplit ".expand('%:h')."/Fragment.ts"

command! Equery :exe "edit ".expand('%:h')."/Query.ts"
command! Vquery :exe "vsplit ".expand('%:h')."/Query.ts"

command! Emutation :exe "edit ".expand('%:h')."/Mutation.ts"
command! Vmutation :exe "vsplit ".expand('%:h')."/Mutation.ts"

command! Eutils :exe "edit ".expand('%:h')."/utils.ts"
command! Vutils :exe "vsplit ".expand('%:h')."/utils.ts"

command! Eindex :exe "edit ".expand('%:h')."/index.tsx"
command! Vindex :exe "vsplit ".expand('%:h')."/index.tsx"

" Commands
command! Graph2ts :AsyncRun yarn graphql2flow
command! Rubocop :AsyncRun bundle exec rubocop -a

" Test runner
let g:test#javascript#jest#executable = './bin/jest'
let g:test#javascript#jest#file_pattern = '.test\.ts'
let g:test#javascript#karma#file_pattern = '_disable_'
let g:test#javascript#mocha#file_pattern = '_disable_'
