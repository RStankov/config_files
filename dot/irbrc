# frozen_string_literal: true

require 'rubygems'

# print SQL to STDOUT
if ENV.include?('RAILS_ENV') && !Object.const_defined?('RAILS_DEFAULT_LOGGER')
  require 'logger'
  RAILS_DEFAULT_LOGGER = Logger.new(STDOUT)
end

# Autocomplete
require 'irb/completion'

# Prompt behavior
ARGV.concat ['--readline', '--prompt-mode', 'simple']

# History
require 'irb/ext/save-history'

IRB.conf[:SAVE_HISTORY] = 100
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb-save-history"
IRB.conf[:AUTO_INDENT] = true

# Easily print methods local to an object's class
class Object
  def local_methods
    (methods - Object.instance_methods).sort
  end
end

# copy a string to the clipboard
def pbcopy(string)
  `echo "#{string}" | pbcopy`
  string
end

def load_factory_bot!
  return if defined? FactoryBot

  require 'factory_bot'

  if Dir.exist?(Rails.root.join('spec/factories'))
    Dir[Rails.root.join('spec/factories/**/*.rb')].each { |f| require f }
    puts 'Factories loaded'
  elsif File.exist?(Rails.root.join('spec.factory.rb'))
    require Rails.root.join('factory.rb')
    puts 'Factories loaded'
  else
    puts 'You have to load factories manually'
  end
end
