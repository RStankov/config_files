#!/bin/bash
set -e

usage() {
  echo "Usage: $0 <encrypted_file> [output_file]"
  echo "Passphrase should be provided via stdin: echo 'your_key' | $0 file.enc"
  echo "If no output_file specified, removes .enc extension from input file"
  exit 1
}

# Check arguments
if [ $# -lt 1 ] || [ $# -gt 2 ]; then
  usage
fi

ENCRYPTED_FILE="$1"

# Check if encrypted file exists
if [ ! -f "$ENCRYPTED_FILE" ]; then
  echo "❌ Error: Encrypted file '$ENCRYPTED_FILE' not found."
  exit 1
fi

# Determine output file
if [ $# -eq 2 ]; then
  OUTPUT_FILE="$2"
else
  # Remove .enc extension if present, otherwise add .decrypted
  if [[ "$ENCRYPTED_FILE" == *.enc ]]; then
    OUTPUT_FILE="${ENCRYPTED_FILE%.enc}"
  else
    OUTPUT_FILE="${ENCRYPTED_FILE}.decrypted"
  fi
fi

# Check if output file already exists
if [ -f "$OUTPUT_FILE" ]; then
  echo "❌ Error: Output file '$OUTPUT_FILE' already exists."
  echo "Remove it first or specify a different output file."
  exit 1
fi

# Check if passphrase is provided via stdin
if [ -t 0 ]; then
  echo "❌ Error: No passphrase provided. Use: echo 'your_passphrase' | $0 $ENCRYPTED_FILE"
  exit 1
fi

# Read the passphrase from stdin
read -r PASSPHRASE

echo "Decrypting '$ENCRYPTED_FILE'..."

# Decrypt the file (explicit parameters matching encryption script)
if echo "$PASSPHRASE" | openssl enc -aes-256-cbc -pbkdf2 -iter 100000 -d -salt -pass stdin -in "$ENCRYPTED_FILE" -out "$OUTPUT_FILE"; then
  echo "✅ File decrypted successfully!"
  echo "Decrypted file saved to: $OUTPUT_FILE"
else
  echo "❌ Error: Decryption failed. Check your passphrase."
  # Clean up failed output file if it was created
  [ -f "$OUTPUT_FILE" ] && rm "$OUTPUT_FILE"
  exit 1
fi
